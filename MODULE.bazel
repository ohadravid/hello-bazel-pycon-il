module(
    name = "demo",
    version = "0.0.0",
)

bazel_dep(name = "aspect_rules_py", version = "1.6.1")

bazel_dep(name = "rules_python", version = "1.5.3")

bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "rules_uv", version = "0.85.0")
bazel_dep(name = "aspect_bazel_lib", version = "2.20.0")
bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "container_structure_test", version = "1.19.1")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.12",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    experimental_index_url = "https://pypi.org/simple",
    hub_name = "pip",
    python_version = "3.12",
    requirements_lock = "//:requirements_lock.txt",
    requirements_linux = "//:requirements_linux_lock.txt",
)
use_repo(pip, "pip")

bazel_dep(name = "hermetic_cc_toolchain", version = "3.1.0")

toolchains = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
use_repo(toolchains, "zig_sdk")

bazel_dep(name = "rules_rust", version = "0.63.0")

RUST_VERSION = "1.89.0"

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    extra_target_triples = [
        "aarch64-unknown-linux-gnu",
        "x86_64-unknown-linux-gnu",
    ],
    versions = [RUST_VERSION],
)
use_repo(rust, "rust_toolchains")

register_toolchains("@rust_toolchains//:all")

crate = use_extension("@rules_rust//crate_universe:extensions.bzl", "crate")

crate.from_cargo(
    name = "crates",
    cargo_lockfile = "//:Cargo.lock",
    manifests = ["//:Cargo.toml"],
)
use_repo(crate, "crates")

git_override(
    module_name = "rules_pyo3",
    remote = "https://github.com/abrisco/rules_pyo3.git",
    commit = "c49531de330a7b12dc16d25b24150d910aad2ecd",
)

bazel_dep(name = "rules_pyo3", version = "0.0.9")

# Register default toolchains or customize your own.
register_toolchains(
    "@rules_pyo3//pyo3/toolchains:toolchain",
    "@rules_pyo3//pyo3/toolchains:rust_toolchain",
)


##########################
# Container images
oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_base",
    digest = "sha256:ccaef5ee2f1850270d453fdf700a5392534f8d1a8ca2acda391fbb6a06b81c86",
    image = "gcr.io/distroless/base",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)
oci.pull(
    name = "ubuntu",
    digest = "sha256:80dd3c3b9c6cecb9f1667e9290b3bc61b78c2678c02cbdae5f0fea92cc6734ab",
    image = "ubuntu",
    platforms = [
        "linux/arm64/v8",
        "linux/amd64",
    ],
    tag = "latest",
)
use_repo(oci, "distroless_base", "distroless_base_linux_amd64", "distroless_base_linux_arm64", "ubuntu", "ubuntu_linux_amd64", "ubuntu_linux_arm64_v8")
